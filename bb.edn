{:paths ["src" "script"]
 :deps {aysylu/loom {:mvn/version "1.0.2"}
        org.clojure/math.numeric-tower {:mvn/version "0.0.5"}
        org.clojure/data.priority-map {:mvn/version "1.2.0"}
        org.clojure/core.memoize {:mvn/version "1.1.266"}
        org.flatland/ordered {:mvn/version "1.15.12"}}
 :tasks {:requires ([babashka.fs :as fs]
                    [aoc]) 
         -input-dir "input"
         -input {:depends [-input-dir]
                 :task (fs/create-dirs -input-dir)}
         -auth-file "auth.edn"
         -solution-template-file "script/solution_template.clj"
         get {:doc "Fetches a specific input (defaults to today)"
              :depends [-auth-file -input]
              :task (aoc/get-input-task -auth-file -input *command-line-args*)}
         new {:doc "Creates a skeleton solution for a specific day"
              :depends [-solution-template-file]
              :task (aoc/gen-new-task -solution-template-file *command-line-args*)}
         solve {:doc "Executes the solution against the input"
                :depends [-auth-file -input] 
                :task (aoc/solve-task -input -auth-file *command-line-args*)} 
         test {:doc "Tests the solution agaist a sample"
               :task (aoc/run-tests-task *command-line-args*)}
         auth {:doc "Set the auth for the Advent of Code API"
               :depends [-auth-file]
               :task (aoc/store-auth-task -auth-file *command-line-args*)}}}